name: Create New Github Repository Approval
on:
  issue_comment:
    types:
     - created
     - edited
  workflow_dispatch:
    inputs:
      repository:
        description: "Gitub Repository"
        required: true
        type: string
      description:
        description: "Describe your repository"
        required: true
        default: "Some description"
jobs:
  create_github_repository:
    if: (contains(github.event.issue.labels.*.name, 'create_repository') && contains(github.event.comment.body, '/approve')) || github.event_name == 'workflow_dispatch'
    name: Create New Github Repository
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          token: ${{ secrets.ACCESS_TOKEN }}
          ref: develop
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/CREATE-NEW-REPOSITORY.yml
      - name: echo inputs
        shell: bash
        env: 
          REPOSITORY: ${{ steps.issue-parser.outputs.issueparser_repository }}
          DESCRIPTION: ${{ steps.issue-parser.outputs.issueparser_description }}
          REPOSITORY_WORKFLOW_DISPATCH: ${{ inputs.repository }}
          DESCRIPTION_WORKFLOW_DISPATCH: ${{ inputs.description }}
        run: |
           if [[ "${{ github.event_name }}" == "issues" ]]; then
             echo "REPOSITORY=$REPOSITORY" >> $GITHUB_ENV
             echo "DESCRIPTION=$DESCRIPTION" >> $GITHUB_ENV
           else
             echo "REPOSITORY=$REPOSITORY_WORKFLOW_DISPATCH" >> $GITHUB_ENV
             echo "DESCRIPTION=$DESCRIPTION_WORKFLOW_DISPATCH" >> $GITHUB_ENV
           fi
      - name: Get commenter's permission
        if: github.event_name == 'issues'
        id: check-permission
        env:
         GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
         COMMENTER: ${{ github.event.comment.user.login }}
         REPOSITORY: ${{ github.repository }}
        run: |
          permission=$(curl -s -H \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/susanto-dev/devops-infra/collaborators/$COMMENTER/permission | jq -r '.permissions.admin' )
          if [[ "$permission" == "true" ]];then
            echo "ADMIN=true" >> $GITHUB_ENV
          else
            echo "ADMIN=false" >> $GITHUB_ENV
          fi
      - uses: actions/github-script@v7
        if: github.event_name == 'issues' && env.ADMIN == 'false'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'You have insufficient permission to create repository'
            })

      - name: Create New Github Repository
        shell: bash
        env:
         GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          HTTP_RESPONSE=$(curl -L \
	  -X POST \
	  -H "Accept: application/vnd.github+json" \
	  -H "Authorization: Bearer $GITHUB_TOKEN" \
	  -H "X-GitHub-Api-Version: 2022-11-28" \
	  https://api.github.com/orgs/susanto-dev/repos \
	  -d '{\"name\":\"$REPOSITORY\",\"description\":\"$DESCRIPTION\",\"private\":false}')
          echo "$HTTP_RESPONSE"
          echo "PRINTING THE RESPONSE TEXT"
          cat response.txt

      - uses: actions/github-script@v7
        if: github.event_name == 'issues'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ¨New github repository has been created'
            })
            github.rest.issues.update({
             ...context.repo,
             issue_number: context.issue.number,
             state: "closed"
            })

