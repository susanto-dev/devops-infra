name: Add a team to Github Repository

on:
  issues:
    types:
     - opened
     - edited

jobs:
  add-team-to-repo:
    if: contains(github.event.issue.labels.*.name, 'add_team_to_repo')
    name: Add team to repo
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          token: ${{ secrets.ACCESS_TOKEN }}
          ref: develop
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/ADD-ROLE-TO-REPOSITORY.yml
      - name: echo inputs
        shell: bash
        env: 
          REPOSITORY: ${{ steps.issue-parser.outputs.issueparser_reponame }}
          TEAM_NAME: ${{ steps.issue-parser.outputs.issueparser_team_name }}
        run: |
           echo "$REPOSITORY"
           echo "$TEAM_NAME"
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ' ðŸ‘‹ Thanks for opening an issue. It will be addressed soon'
            })

      - name: Add a team
        shell: bash
        env:
         GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          if [ "$TEAM_NAME" == "Leads"];then
            type="admin"
          else
            type="push"
          HTTP_RESPONSE=$(curl -s -o response.txt -w "%{response_code}" \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/orgs/susanto-dev/teams/$TEAM_NAME/repos/susanto-dev/$REPOSITORY \
          -d "{\"permission\":\"$type\"}")
          echo "$HTTP_RESPONSE"
          echo "PRINTING THE RESPONSE TEXT"
          cat response.txt
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ' ðŸŽ‰ Team has been added to the repository, issue will be closed'
            })
            github.rest.issues.update({
             ...context.repo,
             issue_number: context.issue.number,
             state: "closed"
            })

